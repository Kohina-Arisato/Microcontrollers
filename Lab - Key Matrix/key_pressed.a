	ORG 00H
LJMP MAIN

	ORG 03H
LJMP KEY_DOWN

	ORG 013H
LJMP CLEAR_LCD

	ORG 30H
MAIN:
	MOV TMOD, #00000001B
	MOV TH0, #00H
	MOV TL0, #00H

	MOV P2, #00H
	
	MOV R0,#30H
	MOV R1,#00H
	MOV R3,#0AH
	MOV R4,#0AH
	MOV R5,#0AH
	MOV R6,#00H
		
	MOV IE, #85H
	SETB IT0
	SETB IT1	

	MOV DPTR, #MYCOM

	C1: 	CLR A
			MOVC A, @A+DPTR
			ACALL COMNWRT
			ACALL DELAY
			INC DPTR
			JZ WAIT_KEY
			SJMP C1

	WAIT_KEY: SJMP WAIT_KEY	

CLEAR_LCD: MOV R0,#30H
		   MOV R1,#00H
		   MOV R3,#0AH
		   MOV R4,#0AH
		   MOV R5,#0AH
		   MOV R6,#00H
		   
		   MOV A,#01H
		   ACALL COMNWRT
		   RETI

KEY_DOWN: CJNE R6,#00H,RETURN
		  MOV A, P0
		  MOV @R0, A
		  INC R0
		  
		  ACALL PRINT_KEY
		  DJNZ R5,RETURN
		  
		  MOV R0, #30H
		  ACALL SORT
		  RETI
		  
RETURN: RETI

PRINT_KEY: MOV A, P0
		   ACALL DATAWRT
		   RET
		   
SORT: ACALL OUT_LOOP
	  INC R6
	  RETI
	  
	SEND_DATA: MOV A, @R0
			   ACALL DATAWRT
			   INC R0   
			   DJNZ R4, SEND_DATA
			   RET

	NEXT_LINE: MOV A,#0C0H
			   ACALL COMNWRT
			   RET

	OUT_LOOP: MOV R2, #09H
			  MOV R1, #30H
			  MOV R0, #31H
			  
			  DJNZ R3, CHECK
			  
			  ACALL NEXT_LINE
			  
			  MOV R4, #0AH
			  MOV R0, #30H
			  ACALL SEND_DATA
			  RET		

	CHECK: MOV A, @R1
		   SUBB A, @R0
		   JNC EXCHANGE
		   JC NEXT

	NEXT: CLR C
		  INC R0
		  INC R1
		  DJNZ R2, CHECK
		  SJMP OUT_LOOP

	EXCHANGE: MOV A, @R1
			  XCH A, @R0
			  MOV @R1, A
			  INC R0
			  INC R1
			  DJNZ R2, CHECK
			  SJMP OUT_LOOP
		  
COMNWRT:
		MOV P1, A
		CLR P2.0
		CLR P2.1
		SETB P2.2
		ACALL DELAY
		CLR P2.2
		RET
				
DATAWRT:
		MOV P1, A
		SETB P2.0
		CLR P2.1
		SETB P2.2
		ACALL DELAY
		CLR P2.2
		RET

DELAY: SETB TR0
LOOP: JNB TF0, LOOP
		  CLR TF0
		  CLR TR0
		  MOV TH0, #00H
		  MOV TL0, #00H
		  RET	  

ORG 300H

MYCOM: DB 38H, 0EH, 01, 80H, 0

END